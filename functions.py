
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import scikitplot as skplt
import streamlit as st
import time
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from CONST import MODELS, MODELS_NAMES

def prepare_data(df):
    vectorizer = CountVectorizer(ngram_range=(1, 2))
    y = df["feeling"]
    X = vectorizer.fit_transform(df["lemma"].apply(lambda x: np.str_(x)))
    
    _, X_test, _, y_test = train_test_split(
        X, y, test_size=.2, random_state=1)

    return X_test, y_test

def get_results(df, mod):
    empty = st.empty()
    with empty:
        st.info("loading...")
    # predicted probabilities generated by sklearn classifier
    if mod == "Sequential":
        model, X_test, y_test = MODELS.get(mod)
    else:
        X_test, y_test = prepare_data(df)
        model = MODELS.get(mod)
    y_probas = model.predict_proba(X_test)

    with empty:
        st.info("Model loaded")
        time.sleep(2)
    empty.empty()
    return y_test, y_probas


def plot_results(y_true, y_probas, title, classes_to_plot=None):
    fig, ax = plt.subplots()
    skplt.metrics.plot_roc(
        y_true, y_probas,
        classes_to_plot=classes_to_plot,
        ax=ax,
        title=title,
        cmap="tab20",
        plot_macro=False
    )
    return fig
